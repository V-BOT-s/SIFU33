const axios = require("axios");
const fs = require("fs-extra");
const path = require("path");
const jimp = require("jimp");

// ЁЯУБ ржоржбрж┐ржЙрж▓ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи
module.exports.config = {
 name: "love2",
 version: "7.3.1",
 hasPermssion: 0,
 credits: "тАФ═Я═Я═Ю═ЮЁЭРВЁЭРШЁЭРБЁЭРДЁЭРС тШвя╕П_ЁЦгШ -ЁЭРБЁЭРОЁЭРУ тЪая╕П ЁЭС╗ЁЭСмЁЭСиЁЭС┤_ тШвя╕П",
 description: "Get Pair From Mention",
 commandCategory: "img",
 usages: "[@mention]",
 cooldowns: 5,
 dependencies: {
 "axios": "",
 "fs-extra": "",
 "path": "",
 "jimp": ""
 }
};

// ЁЯУе ржЗржорзЗржЬ ржбрж╛ржЙржирж▓рзЛржб ржЗржЙржЯрж┐рж▓рж┐ржЯрж┐
const downloadFile = async (url, filePath) => {
 const response = await axios.get(url, { responseType: "arraybuffer" });
 fs.writeFileSync(filePath, Buffer.from(response.data, "utf-8"));
};

// ЁЯУж рж▓рзЛржб ржЯрж╛ржЗржорзЗ ржкрзНрж░рзЯрзЛржЬржирзАрзЯ ржлрж╛ржЗрж▓ рждрзИрж░рж┐
module.exports.onLoad = async () => {
 const dir = path.join(__dirname, "cache", "canvas");
 const imagePath = path.join(dir, "arr2.png");
 if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });
 if (!fs.existsSync(imagePath)) {
 await downloadFile("https://i.imgur.com/iaOiAXe.jpeg", imagePath);
 }
};

// ЁЯОи ржмрзГрждрзНрждрж╛ржХрж╛рж░ ржЕрзНржпрж╛ржнрж╛ржЯрж╛рж░
async function circle(image) {
 image = await jimp.read(image);
 image.circle();
 return await image.getBufferAsync("image/png");
}

// ЁЯЦ╝я╕П ржЪрзВрзЬрж╛ржирзНржд ржЗржорзЗржЬ ржЬрзЗржирж╛рж░рзЗржЯрж░
async function makeImage({ one, two }) {
 const root = path.join(__dirname, "cache", "canvas");
 const background = await jimp.read(path.join(root, "arr2.png"));

 const avatarOnePath = path.join(root, `avt_${one}.png`);
 const avatarTwoPath = path.join(root, `avt_${two}.png`);
 const finalPath = path.join(root, `love2_${one}_${two}.png`);

 const avatarOneData = (await axios.get(`https://graph.facebook.com/${one}/picture?width=512&height=512&access_token=6628568379%7Cc1e620fa708a1d5696fb991c1bde5662`, { responseType: "arraybuffer" })).data;
 fs.writeFileSync(avatarOnePath, Buffer.from(avatarOneData, "utf-8"));

 const avatarTwoData = (await axios.get(`https://graph.facebook.com/${two}/picture?width=512&height=512&access_token=6628568379%7Cc1e620fa708a1d5696fb991c1bde5662`, { responseType: "arraybuffer" })).data;
 fs.writeFileSync(avatarTwoPath, Buffer.from(avatarTwoData, "utf-8"));

 const circleOne = await jimp.read(await circle(avatarOnePath));
 const circleTwo = await jimp.read(await circle(avatarTwoPath));

 background.composite(circleOne.resize(200, 200), 70, 110);
 background.composite(circleTwo.resize(200, 200), 465, 110);

 const finalBuffer = await background.getBufferAsync("image/png");
 fs.writeFileSync(finalPath, finalBuffer);

 fs.unlinkSync(avatarOnePath);
 fs.unlinkSync(avatarTwoPath);

 return finalPath;
}

// ЁЯза рж░рж╛ржи ржЯрж╛ржЗржо ржЗржнрзЗржирзНржЯ
module.exports.run = async function ({ event, api }) {
 const { threadID, messageID, senderID, mentions } = event;
 const mention = Object.keys(mentions);

 const captions = [
 "ЁЯТЦ тОп═втОптГЭЁЯй╖ЁЯШ╜ рждрзБржорж┐ ржЖржорж╛рж░ ржЪрзЛржЦрзЗрждрзЗ рж╕рж░рж▓рждрж╛рж░ ржЙржкржорж╛ тОп═втОптГЭЁЯй╖ЁЯР░ЁЯНТ",
 "ЁЯТЦ ЁЯе║тЭдя╕П ржкрзНрж░рж┐рзЯ.....! ЁЯШК\nржХржЦржирзЛ ржХрж╛ржБржжрж╛ржУ, ржХржЦржирзЛ рж╣рж╛рж╕рж╛ржУ,\nржЖржмрж╛рж░ ржХржЦржирзЛ ржПржоржи ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржжрж╛ржУ,\nржпрзЗржи ржкрзГржерж┐ржмрзАрж░ рж╕ржм рж╕рзБржЦ рждрзЛржорж╛рж░ ржорж╛ржЭрзЗ ржЦрзБржБржЬрзЗ ржкрж╛ржЗ...! ЁЯТФтЭдя╕П",
 "ржмрж┐ржЪрзНржЫрзЗржжрзЗрж░ ржкрж░рзЗржУ ржпрзЛржЧрж╛ржпрзЛржЧ рж░рж╛ржЦрж╛рж░ ржирж╛ржоржЗ рж╣ржЪрзНржЫрзЗ ржорж╛рзЯрж╛ ____ЁЯТЦ ЁЯТЧЁЯМ║",
 "ЁЭРПЁЭРЮЁЭРиЁЭРйЁЭРеЁЭРЮ'ЁЭРм ЁЭРжЁЭРЮЁЭРжЁЭРиЁЭРлЁЭРвЁЭРЮЁЭРм ЁЭРЪЁЭРлЁЭРЮ ЁЭРжЁЭРиЁЭРлЁЭРЮ ЁЭРйЁЭРЮЁЭРлЁЭРмЁЭРиЁЭРзЁЭРЪЁЭРе ЁЭРнЁЭРбЁЭРЪЁЭРз ЁЭРйЁЭРЮЁЭРиЁЭРйЁЭРеЁЭРЮ'ЁЭРм...\nржорж╛ржирзБрж╖рзЗ'рж░ ржерзЗржХрзЗ ржорж╛ржирзБрж╖рзЗ'рж░ рж╕рзНржорзГрждрж┐ ржмрзЗрж╢рж┐ ржЖржкржи рж╣рзЯ,\nржорж╛ржирзБрж╖ ржЫрзЗрзЬрзЗ ржпрж╛рзЯ, ржХрж┐ржирзНрждрзБ рж╕рзНржорзГрждрж┐ ржирзЯ-!!",
 "ржЗржЪрзНржЫрзЗ 'ржЧрзБрж▓рзЛ рж╢ржмрзНржжрж╣рзАржи...!!\nржнрж╛ржмржирж╛ рж╕рзЗ-рждрзЛ ржкрзНрж░рждрж┐ ржжрж┐ржи..!\nржХрж▓рзНржкржирж╛рж░ рж░ржВ ржпржжрж┐ржУ ржШржи,\nржХрж┐ржирзНрждрзБ ржмрж╛рж╕рзНрждржмрждрж╛ ржнрзАрж╖ржг ржХржарж┐ржи....!! ЁЯМ╕ЁЯТФ",
 "ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржорж╛ржирзЗ ржХрзЗржмрж▓ ржкрзНрж░рзЗржо ржирзЯ,\nржмрж░ржВ ржПржоржи ржПржХржЬржи тАФ ржпрж╛рж░ рж╣рж╛рж╕рж┐рждрзЗржЗ рж╕ржХрж╛рж▓ рж╢рзБрж░рзБ рж╣рзЯ, ржЖрж░ ржХрж╛ржирзНржирж╛рзЯ рж░рж╛ржд ржлрзБрж░рж╛рзЯ!ЁЯТЦ ЁЯТМЁЯй╡",
 "ржпрзЗ рж╕ржорзНржкрж░рзНржХ ржЪрзЛржЦрзЗ ржжрзЗржЦрж╛ ржпрж╛рзЯ ржирж╛,\nрждржмрзБржУ ржоржи ржЬрзБрзЬрзЗ ржерж╛ржХрзЗ тАФ рж╕рзЗржЯрж╛ржЗ рж╕ржмржЪрзЗрзЯрзЗ рж╕рждрзНржп ржнрж╛рж▓рзЛржмрж╛рж╕рж╛!ЁЯТЦ ЁЯМЩЁЯе║",
 "рждрзБржорж┐ рж╣рзЯрждрзЛ ржжрзВрж░рзЗ ржЖржЫрзЛ,\nржХрж┐ржирзНрждрзБ ржЖржорж╛рж░ ржкрзНрж░рждрж┐ржЯрж╛ ржЕржирзБржнрзВрждрж┐рж░ ржарж┐ржХрж╛ржирж╛ ржПржЦржирзЛ рждрзБржорж┐!ЁЯТЦ ЁЯТЮЁЯХКя╕П",
 "ржЪрзЛржЦрзЗрж░ ржнрж╛рж╖рж╛ ржмрзЛржЭрзЗ ржпрзЗ, рж╕рзЗ-ржЗ ржкрзНрж░рж┐рзЯ ржорж╛ржирзБрж╖ред\nржХрж╛рж░ржг ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржХржЦржирзЛ рж╢ржмрзНржжрзЗ ржирзЯ, ржжрзГрж╖рзНржЯрж┐рждрзЗ ржкрзНрж░ржХрж╛рж╢ ржкрж╛рзЯ!ЁЯТЦ ЁЯМ╕тЬи",
 "рждрзБржорж┐ ржХрзЗржмрж▓ ржорж╛ржирзБрж╖ ржирж╛,\nрждрзБржорж┐ ржПржХржЯрж╛ ржорж┐рж╖рзНржЯрж┐ ржЕржнрзНржпрж╛рж╕ тАФ ржпрж╛ржХрзЗ ржЫрж╛рзЬрж╛ржУ ржмрж╛ржБржЪрж╛ ржпрж╛рзЯ ржирж╛!ЁЯТЦ ЁЯР╗ЁЯМИ"
 ];

 if (!mention[0]) {
 return api.sendMessage("ржПржХржЬржиржХрзЗ ржорзЗржирж╢ржи ржХрж░ ржмрж▓ржж ЁЯШТ!", threadID, messageID);
 }

 const one = senderID;
 const two = mention[0];

 try {
 const imagePath = await makeImage({ one, two });
 const message = {
 body: captions[Math.floor(Math.random() * captions.length)],
 attachment: fs.createReadStream(imagePath)
 };
 return api.sendMessage(message, threadID, () => fs.unlinkSync(imagePath), messageID);
 } catch (err) {
 console.error("ЁЯе▓love2 ржоржбрж┐ржЙрж▓рзЗ рж╕ржорж╕рзНржпрж╛:", err);
 return api.sendMessage(" ЁЯдзржЗржорзЗржЬ рждрзИрж░рж┐ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ, ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзЛ!", threadID, messageID);
 }
};

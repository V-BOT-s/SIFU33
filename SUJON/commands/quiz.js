const axios = require("axios");
// <<< ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡ßß: ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø ‡¶Æ‡¶°‡¶ø‡¶â‡¶≤ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶®‡¶æ ‡¶ï‡¶∞‡ßá, ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ü‡¶ø ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶õ‡¶ø
const currenciesData = require("../../includes/database/currencies");

async function getBaseApi() {
  try {
    const res = await axios.get("https://raw.githubusercontent.com/mahmudx7/exe/main/baseApiUrl.json");
    return res.data.mahmud;
  } catch (e) {
    console.error("Base API ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", e);
    return null;
  }
}

module.exports.config = {
  name: "qz",
  version: "2.1.1",
  hasPermssion: 0,
  credits: "SHIFAT (Fixed by Gemini)",
  description: "Random quiz ‡¶ñ‡ßá‡¶≤‡ßã",
  commandCategory: "game",
  usages: "[en/bn]",
  cooldowns: 5,
  envConfig: {
    rewardCoins: 500,
    rewardExp: 100
  }
};

module.exports.run = async function ({ api, event, args }) {
  try {
    const input = (args[0] || "").toLowerCase();
    const category = input === "en" || input === "english" ? "english" : "bangla";

    const baseApi = await getBaseApi();
    if (!baseApi) {
      return api.sendMessage("‚ùå ‡¶¨‡ßá‡¶∏ API ‡¶≤‡ßã‡¶° ‡¶π‡ßü‡¶®‡¶ø!", event.threadID, event.messageID);
    }

    const res = await axios.get(`${baseApi}/api/quiz?category=${category}`);
    const quiz = res.data;

    if (!quiz || !quiz.question) {
      return api.sendMessage("‚ùå ‡¶è‡¶á ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ó‡¶∞‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡ßã‡¶®‡ßã Quiz ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§", event.threadID, event.messageID);
    }

    const { question, correctAnswer, options } = quiz;
    const { a, b, c, d } = options;

    const quizMsg =
      `\n‚ï≠‚îÄ‚îÄ‚ú® ${question}\n` +
      `‚îú‚Ä£‚ú®ùóî) ${a}\n` +
      `‚îú‚Ä£‚ú®ùóï) ${b}\n` +
      `‚îú‚Ä£‚ú®ùóñ) ${c}\n` +
      `‚îú‚Ä£‚ú®ùóó) ${d}\n` +
      `‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú®\n` +
      `ùêëùêûùê©ùê•ùê≤ ùê∞ùê¢ùê≠ùê° ùê≤ùê®ùêÆùê´ ùêöùêßùê¨ùê∞ùêûùê´.`;

    api.sendMessage(quizMsg, event.threadID, (err, info) => {
      if (err) return console.error(err);

      global.client.handleReply.push({
        name: this.config.name,
        messageID: info.messageID,
        author: event.senderID,
        correctAnswer
      });

      setTimeout(() => {
        api.unsendMessage(info.messageID).catch(() => {});
      }, 40000);
    }, event.messageID);

  } catch (error) {
    console.error(error);
    api.sendMessage("‚ùå ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá, ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßã‡•§", event.threadID, event.messageID);
  }
};

module.exports.handleReply = async function ({ api, event, handleReply }) {
  const { correctAnswer, author } = handleReply;

  if (event.senderID !== author) {
    return api.sendMessage("üòí ‡¶è‡¶á ‡¶ï‡ßÅ‡¶á‡¶ú‡¶ü‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶®‡ßü‡•§", event.threadID, event.messageID);
  }
  
  // <<< ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡ß®: ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ currencies ‡¶Æ‡¶°‡¶ø‡¶â‡¶≤‡¶ü‡¶ø‡¶ï‡ßá ‡¶á‡¶®‡¶ø‡¶∂‡¶ø‡ßü‡¶æ‡¶≤‡¶æ‡¶á‡¶ú ‡¶ï‡¶∞‡¶õ‡¶ø
  const Currencies = currenciesData({ models: global.models });

  await api.unsendMessage(handleReply.messageID).catch(() => {});
  const userAnswer = event.body.trim().toLowerCase();
  const { rewardCoins, rewardExp } = this.config.envConfig;

  if (userAnswer === correctAnswer.toLowerCase()) {
    // <<< ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡ß©: ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶∂‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø try...catch ‡¶¨‡ßç‡¶≤‡¶ï ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
    try {
      // ‚úÖ ‡¶ï‡ßü‡ßá‡¶®/EXP ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶ï‡¶∞‡¶æ
      await Currencies.increaseMoney(event.senderID, rewardCoins);
      await Currencies.increaseExp(event.senderID, rewardExp);

      api.sendMessage(
        `üòÑ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞!\n‡¶Ü‡¶™‡¶®‡¶ø ‡¶™‡ßá‡ßü‡ßá‡¶õ‡ßá‡¶® ${rewardCoins} ‡¶°‡¶≤‡¶æ‡¶∞ üí∞ ‡¶è‡¶¨‡¶Ç ${rewardExp} EXP üéâ!`,
        event.threadID,
        event.messageID
      );
    } catch (dbError) {
      console.error("‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏‡ßá ‡¶™‡ßÅ‡¶∞‡¶∏‡ßç‡¶ï‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", dbError);
      api.sendMessage("‚úÖ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞! ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßÅ‡¶∞‡¶∏‡ßç‡¶ï‡¶æ‡¶∞ ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏‡ßá ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§", event.threadID, event.messageID);
    }
  } else {
    // <<< ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡ß™: ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡ßá‡¶∞ ‡¶≠‡ßÅ‡¶≤ ‡¶†‡¶ø‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
    api.sendMessage(
      `üê∏ ‡¶≠‡ßÅ‡¶≤ ‡¶â‡¶§‡ßç‡¶§‡¶∞!!\nüòó ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶õ‡¶ø‡¶≤: ${correctAnswer}`,
      event.threadID,
      event.messageID
    );
  }
};
